node {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
      echo 'Stage: test'
      docker.withTool('docker') {
         withDockerServer([credentialsId: "ubdockera1", uri: "tcp://ubdockera1.mhp.lan:2376"]) {
            def myTestContainer = docker.image('node:4.6')
            myTestContainer.pull()
            myTestContainer.inside {
               sh 'npm install --only=dev'
               sh 'npm test'
            }
         }
      }
   }
   stage('test with a DB') {
      echo 'Stage: test with a DB'
      docker.withTool('docker') {
         withDockerServer([credentialsId: "ubdockera1", uri: "tcp://ubdockera1.mhp.lan:2376"]) {
            def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes") 
            def myTestContainer = docker.image('node:4.6')
            myTestContainer.pull()
            myTestContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
               sh 'npm install --only=dev' 
               sh 'npm test'                     
            }                                   
            mysql.stop()
         }
      }
   }                                     
   stage('docker build/push') { 
      echo 'Stage: docker build/push'
      docker.withTool('docker') {
         withDockerServer([credentialsId: "ubdockera1", uri: "tcp://ubdockera1.mhp.lan:2376"]) {
            docker.withRegistry('https://index.docker.io/v2/', 'dockerhub') {
               def app = docker.build("wardviaene/docker-nodejs-demo:${commit_id}", '.').push()
            }
         }
      }                                  
   }                                       
}                                          
